import{IndexedDBWrapper}from"../indexedDB/IndexedDBWrapper.js";import{DateConverter}from"../utils/DateConverter.js";import{Router,ROUTES}from"../utils/Router.js";class ReflectionItem extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._MOOD_MIN=0,this._MOOD_MAX=99,this._entry={type:"number",multipleOf:1,minimum:0,exclusiveMaximum:100,value:50,description:"Daily mood on a range of 0-99."},this.render()}render(){this.shadowRoot.innerHTML=`<style>\n                                    .icon {\n                                      background-size: contain;\n                                      display:inline-block;\n                                      width:1em;\n                                      height:1em;\n                                    }\n                                    .angry-icon {\n                                      background: url(./images/reflection-item_icons/angry-regular.svg) no-repeat center center;\n                                    }\n                                    .sad-icon {\n                                      background: url(./images/reflection-item_icons/sad-regular.svg) no-repeat center center;\n                                    }\n                                    .okay-icon {\n                                      background: url(./images/reflection-item_icons/okay-regular.svg) no-repeat center center;\n                                    }\n                                    .happy-icon {\n                                      background: url(./images/reflection-item_icons/great-regular.svg) no-repeat center center;\n                                    }\n                                    .great-icon {\n                                      background: url(./images/reflection-item_icons/happy-regular.svg) no-repeat center center;\n                                    }\n                                  #mood-slider {\n                                    font-size:3vw;\n                                    display: flex;\n                                    flex-direction: column;\n                                    align-items: center;\n                                    justify-content: space-around;\n                                  }\n                                  #mood{\n                                    margin:auto;\n                                    margin-top: 2vh;\n                                    margin-bottom: 3vh;\n                                    width: 70vw;\n                                  }\n                                  #mood:hover {\n                                    cursor: pointer;\n                                  }\n                                  label {\n                                    font-family: 'Montserrat', sans-serif;\n                                    color: white;\n                                    text-transform: uppercase;\n                                    font-weight: bold;\n                                    margin-bottom: 30px;\n                                  }\n                                  .iconokay-icon {\n                                    color: white;\n                                  }\n                                  h1{\n                                    font-family: "Montserrat", sans-serif;\n                                    margin-top: 15px;\n                                    font-size: 38px;\n                                    line-height:40px;\n                                    color: #e0fbfc;\n                                  }\n                                 </style> \n                                      \n                                        <div id="mood-slider">\n                                            <h1>Today, I'm feeling</h1>\n                                            <input type="range" id="mood" name="mood" value="${this._entry.value}" min="${this._MOOD_MIN}" max="${this._MOOD_MAX}">\n                                            <i class="icon ${this.getFASymbolClass()}"></i>\n                                            <label for="mood">${this.getMoodWord()}</label>\n                                            \n                                            \n                                        </div>\n                                  `;const e=this;this.shadowRoot.getElementById("mood").addEventListener("change",(n=>{e._entry.value=n.target.value;new IndexedDBWrapper("experimentalDB",1).transaction((n=>{n.target.result.transaction(["currentLogStore"],"readwrite").objectStore("currentLogStore").openCursor().onsuccess=function(n){const t=n.target.result;if(t){const n=(new Router).url.searchParams,r=Number(n.get("timestamp")),o=new DateConverter(r);t.value.$defs["daily-logs"].forEach(((n,t)=>{o.equals(Number(n.properties.date.time))&&(n.properties.mood.value=Number(e._entry.value))})),t.update(t.value)}}})),this.render()}))}get entry(){return this._entry}set entry(e){this._entry=e,this.render()}getMoodWord(){return this._entry.value<20?"angry":this._entry.value<40?"sad":this._entry.value<60?"okay":this._entry.value<80?"happy":"great"}getFASymbolClass(){let e;switch(this.getMoodWord()){case"angry":e="angry-icon";break;case"sad":e="sad-icon";break;case"okay":e="okay-icon";break;case"happy":e="happy-icon";break;case"great":e="great-icon";break;default:e=""}return e}}customElements.define("reflection-item",ReflectionItem);