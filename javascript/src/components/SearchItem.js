import{DateConverter}from"../utils/DateConverter.js";import{Router,ROUTES}from"../utils/Router.js";class SearchItem extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._entry={time:void 0,tasks:[],notes:[],events:[],reflection:[],type:"daily-log"},this.render()}render(){this.shadowRoot.innerHTML=`<style>\n                                    #single-entry {\n                                      width: 50vw;\n                                    }\n                                    #log-entries {\n                                      display: flex;\n                                      flex-direction: column;\n                                      flex-wrap: wrap;\n                                    }\n                                    .result {\n                                      color: #ee6c4d;\n                                    }\n                                      </style>\n                                      <span id="single-entry">\n                                          <a href="#" class="result" target="_blank">${this.getDate()}</a>\n                                          <ul id="log-entries">\n                                          </ul>\n                                      </span>`;const t=this;"daily-log"===this._entry.type?(this.shadowRoot.querySelector("a").addEventListener("click",(e=>{e.preventDefault();const n=new URLSearchParams;n.append("timestamp",Number(t._entry.time));const s=new URL(ROUTES.daily,window.location.origin);s.search=n,new Router(s).navigate()})),this.populateLogEntries()):(this.shadowRoot.querySelector("a").addEventListener("click",(e=>{e.preventDefault();const n=new URL(ROUTES["collection-edit"],window.location.origin);n.searchParams.append("name",t._entry.name),new Router(n).navigate()})),this.populateCollectionTasks())}populateLogEntries(){this.addAsListItems(this._entry.tasks),this.addAsListItems(this._entry.notes),this.addAsListItems(this._entry.events),this.addAsListItems(this._entry.reflection)}populateCollectionTasks(){this.addAsListItems(this._entry.tasks)}addAsListItems(t){const e=this;t.forEach((t=>{const n=document.createElement("li");n.textContent=t.item.description,e.shadowRoot.getElementById("log-entries").appendChild(n)}))}getDate(){const t=this._entry.time;return new DateConverter(t).toLocaleDateString()}set entry(t){this._entry=t,this.render()}get entry(){return this._entry}}customElements.define("search-item",SearchItem);