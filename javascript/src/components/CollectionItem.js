import{IndexedDBWrapper}from"../indexedDB/IndexedDBWrapper.js";import{Router,ROUTES}from"../utils/Router.js";const wrapper=new IndexedDBWrapper("experimentalDB",1);class CollectionItem extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._entry={name:""},this.render()}render(){this.shadowRoot.innerHTML=`<style>\n                                      .icon-collection {\n                                          background-size: contain;\n                                          width:40%;\n                                          height:40%;\n                                          margin:auto;\n                                      }\n                                      img {\n                                        background-color: white;\n                                        border-radius: 10px;\n                                      }\n                                      .icon-trash {\n                                        visibility: hidden;\n                                        background-size: contain;\n                                        width:2em;\n                                        height:2em;\n                                        transition: transform 0.25s;\n                                      }\n                                      .icon-trash:hover{\n                                        cursor: pointer;\n                                        transform: scale(1.2);\n                                      }\n                                      .trash-button-icon {\n                                        background: url(./images/log-item_icons/trash-solid.svg) no-repeat center center;\n                                      }\n                                      .folder {\n                                        margin-right: 1vw;\n                                        margin-top:1vh;\n                                        margin-bottom: 1vh;\n                                        \n                                        display:flex;\n                                        flex-direction: column;\n                                        align-items: flex-start;\n                                        justify-content: center;\n                                        width:400px;\n                                        color: #e0fbfc;\n                                      }\n                                      .icon-collection {\n                                        transition: transform 0.25s;\n                                      }\n                                      .icon-collection:hover {\n                                        cursor: pointer;\n                                        transform: scale(1.1);\n                                      }\n                                      h1 {\n                                        font-family: 'Montserrat', sans-serif;\n                                        color: white;\n                                        margin:auto;\n                                        margin-top: 20px;\n                                      }\n                                      h1:hover {\n                                        cursor: pointer;\n                                      }\n                                      button {\n                                          background-color: rgba(0,0,0,0);\n                                          border:0;\n                                          padding:0;\n                                          font-size: inherit;\n                                      }\n                                      </style>\n                                    <div class="folder">\n                                        <span class="icon-trash trash-button-icon"></span>\n                                        <img src="./images/icon-collection.svg" class="icon-collection">\n                                        <h1>${this.getCollectionName()}</h1>\n                                    </div>`,this.setClickListeners(),this.setHoverListeners()}setClickListeners(){this.shadowRoot.querySelector('span[class="icon-trash trash-button-icon"]').addEventListener("click",(e=>{const t=e.target.getRootNode().host.getCollectionName();wrapper.transaction((e=>{e.target.result.transaction(["currentLogStore"],"readwrite").objectStore("currentLogStore").openCursor().onsuccess=function(e){const n=e.target.result;if(n){const e=n.value,o=e.properties.collections;let r;o.forEach((e=>{e.name===t&&(r=o.indexOf(e))})),o.splice(r,1);n.update(e)}}})),e.target.parentElement.remove()})),this.dataset.name=this._entry.name;const e=this;this.shadowRoot.querySelector('img[class="icon-collection"]').addEventListener("click",(t=>{const n=new URL(ROUTES["collection-edit"],window.location.origin);n.searchParams.append("name",e.dataset.name),new Router(n).navigate()})),this.shadowRoot.querySelector("h1").addEventListener("click",(e=>{const t=e.target.getRootNode().host,n=e.target;n.style.display="none";const o=document.createElement("form"),r=document.createElement("input");r.setAttribute("type","text"),r.style.height="40px",r.style.fontStyle="italic",r.style.width="392.5px",r.style.marginTop="20px",r.style.color="white",r.style.fontSize="32px",r.style.fontWeight="bold",r.style.fontFamily='"Montserrat", sans-serif',r.style.textAlign="center",r.style.background="transparent",r.value=n.textContent,o.append(r),e.target.parentElement.append(o),r.focus(),r.addEventListener("blur",(()=>{r.remove(),n.style.display="block"})),o.addEventListener("change",(e=>{e.preventDefault();const n=r.value;t.entry={name:n}}))}))}setHoverListeners(){const e=this.shadowRoot.querySelector(".icon-trash"),t=this.shadowRoot.querySelector("div");this.addEventListener("mouseenter",(()=>{t.style.borderBottomStyle="solid",e.style.visibility="visible"})),this.addEventListener("mouseleave",(()=>{t.style.borderBottomStyle="none",e.style.visibility="hidden"}))}getCollectionName(){return""===this._entry.name?"Collection":this._entry.name}set entry(e){updateCollectionName(this._entry.name,e.name),this._entry=e,this.render()}get entry(){return this._entry}}function updateCollectionName(e,t){wrapper.transaction((n=>{n.target.result.transaction(["currentLogStore"],"readwrite").objectStore("currentLogStore").openCursor().onsuccess=function(n){const o=n.target.result;if(o){const n=o.value;n.properties.collections.forEach((n=>{n.name===e&&(n.name=t)}));const r=o.update(n);r.onerror=function(e){},r.onsuccess=function(n){console.log('successfully updated "'+e+'" to "'+t+'"')}}}}))}customElements.define("collection-item",CollectionItem);export{CollectionItem,wrapper};